[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "aimnet"
version = "0.0.1"
description = "AIMNet Machine Learned Interatomic Potential"
readme = "README.md"
authors = [
    {name = "Roman Zubatyuk", email = "zubatyuk@gmail.com"}
]
requires-python = ">=3.10,<3.11"
dependencies = [
    "torch>=2.4",
    "pyyaml>=6.0.2",
    "numpy<2.0",
    "numba>=0.60.0",
    "requests>=2.32.3",
    "click>=8.1.7",
    "omegaconf>=2.3.0",
    "wandb>=0.18.5",
    "jinja2>=3.1.4",
    "h5py>=3.12.1",
    "pytorch-ignite>=0.5.1",
    "ase==3.22.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.2.0",
    "pytest-cov>=4.0.0",
    "deptry>=0.16.2",
    "mypy>=1.5.1",
    "pre-commit>=3.4.0",
    "tox>=4.11.1",
]
docs = [
    "mkdocs>=1.4.2",
    "mkdocs-material>=9.2.7",
    "mkdocstrings[python]>=0.26.1",
]

[project.urls]
repository = "https://github.com/isayevlab/aimnetcentral"
documentation = "https://isayevlab.github.io/aimnetcentral/"

[project.scripts]
aimnet2pysis = "aimnet.calculators.aimnet2pysis:main"
aimnet = "aimnet.cli:cli"
aimnet-clear-models-cache = "aimnet.calculators.model_registry:clear_assets"

[tool.mypy]
files = ["aimnet"]
check_untyped_defs = false  # Optional: don't check untyped function definitions
ignore_missing_imports = true  # Optional: ignore external imports
strict = false  # Ensure no strict type checking
disable_error_code = ["import-untyped"]

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.ruff]
target-version = "py39"
line-length = 120
fix = true
lint.select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E", "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
]
lint.ignore = [
    # LineTooLong
    "E501",
    # DoNotAssignLambda
    "E731",
    #
    "UP006", "UP035",
    "TRY003",
    "C901",
    "PGH003",
    "S101"
]

[tool.ruff.format]
preview = true

[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
branch = true
source = ["aimnet"]

[tool.deptry.per_rule_ignores]
DEP001 = ["ase", "pysisyphus"]
DEP003 = ["ase", "pysisyphus"]
DEP004 = ["ase", "pysisyphus"]

[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["linux-64"]

[tool.pixi.pypi-dependencies]
aimnet = { path = "." }

[tool.pixi.tasks]
